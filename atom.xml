<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[ALEX BABAN]]></title>
  <link href="http://www.alexbaban.com/atom.xml" rel="self"/>
  <link href="http://www.alexbaban.com/"/>
<<<<<<< HEAD
  <updated>2013-12-10T00:18:03-08:00</updated>
=======
  <updated>2013-12-10T00:10:05-08:00</updated>
>>>>>>> b5ef567d801bd189f28f5fd4dd27ea0cb1102f86
  <id>http://www.alexbaban.com/</id>
  <author>
    <name><![CDATA[Alex Baban]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using LiveReload and LiveReloadX on Windows - Free Solution]]></title>
    <link href="http://www.alexbaban.com/blog/2013/12/09/using-livereload-and-livereloadx-on-windows-free-solution/"/>
    <updated>2013-12-09T22:10:32-08:00</updated>
    <id>http://www.alexbaban.com/blog/2013/12/09/using-livereload-and-livereloadx-on-windows-free-solution</id>
    <content type="html"><![CDATA[<h3>Hitting refresh on your browser every time you change and save your code is so &ldquo;two years ago&rdquo;.</h3>

<p>I always like to research (personal websites, blogs, twitters) the speakers of recent front-end, back-end conferences and learn from these awesome people.</p>

<p>After watching some presentations made by some of the current <em>&ldquo;Ninja&rdquo;</em> or <em>&ldquo;Rock Star&rdquo;</em> developers (sorry <em>&ldquo;Gurus&rdquo;</em> but you&rsquo;re out of fashion (and old)) I wanted to setup live reload on my Windows development machine. I purchased the Compass.app for Windows and while it worked, my CPU usage went up by 30% when I was using it to monitor the file system for changes. I guess it did a lot of work in the background.</p>

<p>After more research I found &lsquo;LiveReloadX&rsquo;, a LiveReload compatible server based on Node.js. I can tell that it&rsquo;s working very well, it&rsquo;s light on CPU and you can customize what file types you&rsquo;d like to monitor for changes. LiveReloadX on GitHub <a href="https://github.com/nitoyon/livereloadx">link here</a>.</p>

<p>Here is the setup to get this working</p>

<ol>
<li><p>Install Node.js (if you don&rsquo;t have it already, which you should for other goodies)</p></li>
<li><p>Install LiveReloadX global <code>npm install livereloadx -g</code></p></li>
<li><p>Install the LiveReload browser extension <a href="http://feedback.livereload.com/knowledgebase/articles/86242-how-do-i-install-and-use-the-browser-extensions-">link here</a></p></li>
<li><p>Open a command window and navigate into the folder you&rsquo;d like to monitor for changes. Sub-folders will also be monitored automaticaly. Run livereloadx in the command window and also click the LiveReload extension icon on the browser. Watch the messages between the server and the client in the command window.</p></li>
<li><p>For more information about LiveReloadX including help, usage and command options visit <a href="http://nitoyon.github.io/livereloadx/">link here</a></p></li>
</ol>


<p>Below is my screencast showing LiveReload, LiveReloadX on Windows.</p>

<pre>
<!-- copy and paste. Modify height and width if desired. -->
 <object id="scPlayer" width="745" height="600" type="application/x-shockwave-flash" data="http://content.screencast.com/users/alexbaban/folders/Default/media/167bebcf-8584-44ce-8d12-a6a54854b3b9/bootstrap.swf" >
 <param name="movie" value="http://content.screencast.com/users/alexbaban/folders/Default/media/167bebcf-8584-44ce-8d12-a6a54854b3b9/bootstrap.swf" />
 <param name="quality" value="high" />
 <param name="bgcolor" value="#FFFFFF" />
 <param name="flashVars" value="thumb=http://content.screencast.com/users/alexbaban/folders/Default/media/167bebcf-8584-44ce-8d12-a6a54854b3b9/FirstFrame.jpg&containerwidth=800&containerheight=600&content=http://content.screencast.com/users/alexbaban/folders/Default/media/167bebcf-8584-44ce-8d12-a6a54854b3b9/2013-12-09_1737.swf&blurover=false" />
 <param name="allowFullScreen" value="true" />
 <param name="scale" value="showall" />
 <param name="allowScriptAccess" value="always" />
 <param name="base" value="http://content.screencast.com/users/alexbaban/folders/Default/media/167bebcf-8584-44ce-8d12-a6a54854b3b9/" />
 Unable to display content. Adobe Flash is required.
</object> 
</pre>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Copy as Path for Windows XP or Later]]></title>
    <link href="http://www.alexbaban.com/blog/2013/12/05/copy-as-path-for-windows-xp-or-later/"/>
    <updated>2013-12-05T12:46:42-08:00</updated>
    <id>http://www.alexbaban.com/blog/2013/12/05/copy-as-path-for-windows-xp-or-later</id>
    <content type="html"><![CDATA[<p>Many times, during my work, I need to type or paste the path of a folder or file. On Windows 7 if you &ldquo;Shift + Right-Click&rdquo; on a file or folder, you get the &ldquo;Copy as path&rdquo; option, which copies to the clipboard the complete path of the folder or file. The path is copied surrounded by double quotes. Windows XP (yes, I still use Windows XP, mostly for testing) does not have &ldquo;Copy as path&rdquo;, also on Windows 7 many times I need the path without the double quotes.</p>

<p>I&rsquo;ve decided to write my own small program to add &ldquo;Copy as path&rdquo; options to Windows XP and also use it on Windows 7 to get the path when I don&rsquo;t need the double quotes.</p>

<h2>CopyPath written in PureBasic</h2>

<p>PureBasic is a native 32-bit and 64-bit programming language based on established BASIC rules. The key features of PureBasic are portability (Windows, Linux and MacOS X are currently supported), the production of very fast and highly optimized executables and, of course, the very simple BASIC syntax.</p>

<p>I&rsquo;ve published the source code on <a href="https://github.com/alexbaban/small-projects">my GitHub &ldquo;small-projects&rdquo; repository</a> from where you can also download the executable. If you&rsquo;d like to build the program yourself from the source code, read on.</p>

<div><script src='https://gist.github.com/7742321.js'></script>
<noscript><pre><code>; CopyPath, utility program
; It takes as argument a file or a folder, puts the path of it into clipboard
; It can be a great time saver if included into &quot;Send to&quot; menu
; This program is written in PureBasic, go to http://purebasic.com/ for the compiler/IDE
; It works similar to &quot;Copy as path&quot; feature from Windows 7
; It works on Windows XP or later

; Author: Alex Baban
; Date: 2013-03-15
; Version: 1.0.1



; make this a console program
OpenConsole()

; get the first argument (full path to file or folder)
argPath$ = ProgramParameter(0)

; put the path in clipboard as text
SetClipboardText(argPath$)

; show the path in a console window to give user feedback
PrintN(argPath$)
Delay(1000)

; end program
End</code></pre></noscript></div>


<h2>Build CopyPath from source code</h2>

<p>To be continued&hellip;</p>

<h2>Install CopyPath</h2>

<p>To be continued&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="http://www.alexbaban.com/blog/2013/11/29/hello-world/"/>
    <updated>2013-11-29T09:22:30-08:00</updated>
    <id>http://www.alexbaban.com/blog/2013/11/29/hello-world</id>
    <content type="html"><![CDATA[<p>That&rsquo;s all for now. Test OK.</p>
]]></content>
  </entry>
  
</feed>
